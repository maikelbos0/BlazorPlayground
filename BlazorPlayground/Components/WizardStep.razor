
@if (Parent?.ActiveStep == this) {
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
}

@code {
    [CascadingParameter]
    private Wizard Parent { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public EventCallback<InitializeStepEventArgs> OnInitializeStep { get; set; }

    [Parameter]
    public EventCallback<TryCompleteStepEventArgs> OnTryCompleteStep { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    protected override async Task OnInitializedAsync() {
        await Parent.AddStep(this);
    }

    internal async Task<InitializeStepEventArgs> InitializeStep() {
        var args = new InitializeStepEventArgs();

        await OnInitializeStep.InvokeAsync(args);

        return args;
    }

    internal async Task<TryCompleteStepEventArgs> TryCompleteStep() {
        var args = new TryCompleteStepEventArgs();

        await OnTryCompleteStep.InvokeAsync(args);

        return args;
    }
}
