@page "/chart"
@using BlazorPlayground.Chart

<h1>Chart</h1>

<div class="btn-toolbar">
    <fieldset class="btn-group mb-3 me-3">
        <button type="button" class="btn btn-secondary" @onclick="AddDataSeries">Add data series</button>
        <button type="button" class="btn btn-secondary" @onclick="AddDataPoint">Add data point</button>
        <button type="button" class="btn btn-secondary" @onclick="GenerateData">Generate data</button>
    </fieldset>

    <fieldset class="input-group mb-3 me-3">
        <div class="input-group-text">Canvas dimensions</div>

        <div class="input-group-text">
            <label for="width">Width</label>
        </div>

        <input type="text" class="form-control" id="width" @bind-value="XYChart.Canvas.Width" />

        <div class="input-group-text">
            <label for="height">Height</label>
        </div>

        <input type="text" class="form-control" id="height" @bind-value="XYChart.Canvas.Height" />

        <div class="input-group-text">
            <label for="padding">Padding</label>
        </div>

        <input type="text" class="form-control" id="padding" @bind-value="XYChart.Canvas.Padding" />

        <div class="input-group-text">
            <label for="yAxisLabelWidth">Y-axis label width</label>
        </div>

        <input type="text" class="form-control" id="yAxisLabelWidth" @bind-value="XYChart.Canvas.YAxisLabelWidth" />

        <div class="input-group-text">
            <label for="yAxisLabelClearance">Y-axis label clearance</label>
        </div>

        <input type="text" class="form-control" id="yAxisLabelClearance" @bind-value="XYChart.Canvas.YAxisLabelClearance" />

        <div class="input-group-text">
            <label for="xAxisLabelHeight">X-axis label height</label>
        </div>

        <input type="text" class="form-control" id="xAxisLabelHeight" @bind-value="XYChart.Canvas.XAxisLabelHeight" />

        <div class="input-group-text">
            <label for="xAxisLabelClearance">X-axis label clearance</label>
        </div>

        <input type="text" class="form-control" id="xAxisLabelClearance" @bind-value="XYChart.Canvas.XAxisLabelClearance" />

        <div class="input-group-text">
            <label for="gridLineIntervalHeight">Grid line interval height</label>
        </div>

        <input type="text" class="form-control" id="gridLineIntervalHeight" @bind-value="XYChart.Canvas.GridLineIntervalHeight" />
    </fieldset>

    <fieldset class="input-group mb-3 me-3">
        <div class="input-group-text">Plot area</div>

        <div class="input-group-text">
            <label for="yAxisMin">Min</label>
        </div>

        <input type="text" class="form-control" id="yAxisMin" @bind-value="XYChart.PlotArea.Min" />

        <div class="input-group-text">
            <label for="yAxisMax">Max</label>
        </div>

        <input type="text" class="form-control" id="yAxisMax" @bind-value="XYChart.PlotArea.Max" />

        <div class="input-group-text">
            <label for="yAxisGridLineInterval">Grid line interval</label>
        </div>

        <input type="text" class="form-control" id="yAxisGridLineInterval" @bind-value="XYChart.PlotArea.GridLineInterval" />

        <div class="input-group-text">
            <input class="form-check-input mt-0" type="checkbox" id="autoScale" @bind="XYChart.AutoScale" />
            <label class="form-check-label ps-2" for="autoScale">Auto scale plot area</label>
        </div>
    </fieldset>
</div>

<table class="mb-3">
    <tr>
        <th></th>

        @for (var y0 = 0; y0 < XYChart.DataSeries.Count; y0++) {
            var y = y0;

            <th>
                <input type="text" class="form-control" @bind-value="XYChart.DataSeries[y].Name" />
            </th>
        }
    </tr>

    @for (var x0 = 0; x0 < XYChart.Labels.Count; x0++) {
        var x = x0;

        <tr>
            <th>
                <input type="text" class="form-control" @bind-value="XYChart.Labels[x]" />
            </th>

            @for (var y0 = 0; y0 < XYChart.DataSeries.Count; y0++) {
                var y = y0;

                <td>
                    <input type="text" class="form-control" @bind-value="XYChart.DataSeries[y][x]" />
                </td>
            }
        </tr>
    }
</table>

<ChartRenderer Chart="XYChart"/>

@code {
    private XYChart XYChart = new();

    protected override void OnInitialized() {
        base.OnInitialized();

        AddDataPoint();
        AddDataSeries();
    }

    private void AddDataSeries() {
        XYChart.AddDataSeries($"Series {XYChart.DataSeries.Count + 1}");
    }

    private void AddDataPoint() {
        XYChart.AddDataPoint($"Value {XYChart.Labels.Count + 1}");
    }

    private void GenerateData() {
        var random = new Random();

        for (var y = 0; y < XYChart.DataSeries.Count; y++) {
            for (var x = 0; x < XYChart.DataSeries[y].Count; x++) {
                if (XYChart.DataSeries[y][x] == null) {
                    XYChart.DataSeries[y][x] = random.Next(-100, 900);
                }
            }
        }

        // TODO figure out why plot area isn't being updated after autoscale
        // StateHasChanged();
    }
}