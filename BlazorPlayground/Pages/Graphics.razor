@page "/graphics"
@using BlazorPlayground.Graphics

<h1>Graphics</h1>

<EditForm Model="drawType">
    <InputRadioGroup @bind-Value="@drawType">
        <div>
            <InputRadio Value="DrawType.Line" /> Line
            <InputRadio Value="DrawType.Square" /> Square
        </div>
    </InputRadioGroup>
</EditForm>

<svg width="800" height="800" style="border: 1px solid grey" @onmousedown="OnStart" @onmouseup="OnEnd">
    @foreach (var pointSeries in PointSeries) {
        <Shape @key="pointSeries" PointSeries="pointSeries"/>
    }
</svg>

@code {
    public enum DrawType {
        Line,
        Square
    }

    private DrawType drawType = DrawType.Line;
    private Point startPoint;

    public void OnStart(MouseEventArgs args) {
        startPoint = new Point(args.OffsetX, args.OffsetY);
    }

    public void OnEnd(MouseEventArgs args) {
        if (startPoint != null) {
            var endPoint = new Point(args.OffsetX, args.OffsetY);

            switch (drawType) {
                case DrawType.Line:
                    PointSeries.Add(new Line(startPoint, endPoint));
                    break;
                case DrawType.Square:
                    PointSeries.Add(new Square(startPoint, endPoint));
                    break;
            }

            startPoint = null;
        }
    }

    public List<IPointSeries> PointSeries { get; set; } = new List<IPointSeries>() {
        new Line(new Point(10, 10), new Point(250, 490)),
        new Line(new Point(490, 10), new Point(250, 250)),
        new Square(new Point(140, 140), new Point(240, 240)),
        new Square(new Point(180, 180), new Point(280, 280))
    };

}
