@page "/calculator"
@using BlazorPlayground.Calculator
@using System.Threading

<div class="container">
    <h1>Calculator</h1>

    <GlobalEventHandler OnKeyUp="(e) => HandleKey(e.Key)" />

    <div class="row">
        <div class="col-12 col-md-6 col-xl-4">
            <div class="mb-4">
                <input type="text" readonly="readonly" class="form-control text-end @errorClass" id="display" value="@expression">
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-secondary w-100" @onclick="expression.Clear">AC</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('(')">(</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append(')')">)</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('⌫')">&#x232B;</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('π')">&pi;</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('e')">e</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('²')">x&sup2;</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('√')">&#x221A;</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('⁻')">x&#x207B;&#x00B9;</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('|')">|x|</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('%')">mod</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('÷')">&divide;</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('7')">7</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('8')">8</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('9')">9</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('×')">&times;</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('4')">4</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('5')">5</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('6')">6</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('−')">&minus;</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('1')">1</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('2')">2</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('3')">3</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('+')">+</button>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('±')">&plusmn;</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('0')">0</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-light w-100" @onclick="() => Append('.')">.</button>
                </div>
                <div class="col-3">
                    <button class="btn btn-primary w-100" @onclick="() => expression.Evaluate()">=</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string errorClass = "";
    private CancellationTokenSource clearErrorCancellationTokenSource;
    private CalculationExpression expression = new CalculationExpression();

    private async Task HandleKey(string s) {
        if (s == "=" || s == "Enter") {
            expression.Evaluate();
        }
        else if (s == "Delete") {
            expression.Clear();
        }
        else if (s == "Backspace") {
            await Append('⌫');
        }
        else if (s.Length == 1) {
            await Append(s[0]);
        }
    }

    private async Task Append(char c) {
        if (!expression.TryAppend(c)) {
            if (clearErrorCancellationTokenSource != null) {
                clearErrorCancellationTokenSource.Cancel();
            }

            clearErrorCancellationTokenSource = new CancellationTokenSource();
            errorClass = "is-invalid";
            await Task.Delay(300, clearErrorCancellationTokenSource.Token);
            errorClass = "";
        }
    }
}
