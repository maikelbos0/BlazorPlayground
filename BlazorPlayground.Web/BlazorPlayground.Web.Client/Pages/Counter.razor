@using BlazorPlayground.StateManagement;
@using BlazorPlayground.StateManagement.Components;
@using System.Diagnostics.CodeAnalysis
@inherits StateManagedComponentBase
@inject ApplicationState State
@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current value: @Value</p>
<p role="status">Current count: @Count.Value</p>
<p role="status">Double count: @DoubleCount.Value</p>

<button class="btn btn-primary" @onclick="IncrementValue">I don't update on render</button>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
	private int Value { get; set; }
	[NotNull] private MutableState<int>? Count { get; set; }
	[NotNull] private ComputedState<int>? DoubleCount { get; set; }

	protected override void OnInitialized() {
		base.OnInitialized();
		DoubleCount = StateProvider.Computed(() => State.Counter.Value * 2);
		StateProvider.Effect(() => Console.WriteLine(DoubleCount.Value));
	}

	private void IncrementCount() {
		State.Counter.Update(count => count + 1);
	}

	private void IncrementValue() {
		Value++;
	}
}
